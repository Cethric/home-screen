.animate__stampIn {
    animation-name: animate__stampIn;
    will-change: transform, opacity;
}

.animate__shrinkOut {
    animation-name: animate__shrinkOut;
    will-change: transform, opacity;
}

@property --offset-left {
    syntax: "<integer>";
    inherits: false;
    initial-value: 0;
}

@property --offset-top {
    syntax: "<integer>";
    inherits: false;
    initial-value: 0;
}

@property --rotation {
    syntax: "<integer>";
    inherits: false;
    initial-value: 0;
}

:root {
    --offset-dvw: calc(var(--offset-left) * 1dvw);
    --offset-dvh: calc(var(--offset-top) * 1dvh);
    --rotate-deg: calc(var(--rotation) * 1deg);
}

@keyframes animate__stampIn {
    0% {
        opacity: 0;
        transform: translate(var(--offset-dvw), var(--offset-dvh)) rotate(0)
            scale(1.3);
        animation-timing-function: cubic-bezier(0.59, 0, 1, 0.375);
    }

    50% {
        opacity: 100;
    }

    100%,
    70% {
        opacity: 100;
        transform: translate(var(--offset-dvw), var(--offset-dvh))
            rotate(var(--rotate-deg)) scale(1);
    }

    90% {
        opacity: 100;
        transform: translate(var(--offset-dvw), var(--offset-dvh))
            rotate(calc(var(--rotate-deg) / 2)) scale(1.03);
    }
}

@keyframes animate__shrinkOut {
    0% {
        opacity: 100;
        transform: translate(var(--offset-dvw), var(--offset-dvh))
            rotate(var(--rotate-deg)) scale(1);
        animation-timing-function: cubic-bezier(0, 0.59, 0.375, 1);
    }

    100% {
        opacity: 0;
        transform: translate(var(--offset-dvw), var(--offset-dvh))
            rotate(var(--rotate-deg)) scale(0.85);
        animation-timing-function: ease;
    }
}
