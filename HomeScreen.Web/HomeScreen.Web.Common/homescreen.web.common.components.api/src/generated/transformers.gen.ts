// This file is auto-generated by @hey-api/openapi-ts

import type {
  MediaAllResponse,
  MediaGetResponse,
  MediaPatchResponse,
  WeatherAll2Response,
  WeatherAllResponse,
} from './types.gen';

const mediaItemSchemaResponseTransformer = (data: any) => {
  // if (data.created) {
  //   data.created = new Date(data.created);
  // }
  return data;
};

export const mediaGetResponseTransformer = async (
  data: any,
): Promise<MediaGetResponse> => {
  data = mediaItemSchemaResponseTransformer(data);
  return data;
};

const paginatedMediaItemSchemaResponseTransformer = (data: any) => {
  if (data.mediaItem) {
    data.mediaItem = mediaItemSchemaResponseTransformer(data.mediaItem);
  }
  return data;
};

export const mediaAllResponseTransformer = async (
  data: any,
): Promise<MediaAllResponse> => {
  data = data.map((item: any) => {
    return paginatedMediaItemSchemaResponseTransformer(item);
  });
  return data;
};

export const mediaPatchResponseTransformer = async (
  data: any,
): Promise<MediaPatchResponse> => {
  data = mediaItemSchemaResponseTransformer(data);
  return data;
};

const hourlyForecastSchemaResponseTransformer = (data: any) => {
  if (data.time) {
    data.time = new Date(data.time);
  }
  return data;
};

export const weatherAllResponseTransformer = async (
  data: any,
): Promise<WeatherAllResponse> => {
  data = data.map((item: any) => {
    return hourlyForecastSchemaResponseTransformer(item);
  });
  return data;
};

const dailyForecastSchemaResponseTransformer = (data: any) => {
  if (data.time) {
    data.time = new Date(data.time);
  }
  if (data.sunrise) {
    data.sunrise = new Date(data.sunrise);
  }
  if (data.sunset) {
    data.sunset = new Date(data.sunset);
  }
  return data;
};

export const weatherAll2ResponseTransformer = async (
  data: any,
): Promise<WeatherAll2Response> => {
  data = data.map((item: any) => {
    return dailyForecastSchemaResponseTransformer(item);
  });
  return data;
};
