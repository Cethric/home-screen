/*
 * Nominatim Open API Spec
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: blake.rogan@outlook.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using Xunit;

using System;
using System.Linq;
using System.IO;
using System.Collections.Generic;
using HomeScreen.OpenAPI.Nominatim.Model;
using HomeScreen.OpenAPI.Nominatim.Client;
using System.Reflection;
using Newtonsoft.Json;

namespace HomeScreen.OpenAPI.Nominatim.Test.Model
{
    /// <summary>
    ///  Class for testing ReverseOutputXmlAddressparts
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the model.
    /// </remarks>
    public class ReverseOutputXmlAddresspartsTests : IDisposable
    {
        // TODO uncomment below to declare an instance variable for ReverseOutputXmlAddressparts
        //private ReverseOutputXmlAddressparts instance;

        public ReverseOutputXmlAddresspartsTests()
        {
            // TODO uncomment below to create an instance of ReverseOutputXmlAddressparts
            //instance = new ReverseOutputXmlAddressparts();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of ReverseOutputXmlAddressparts
        /// </summary>
        [Fact]
        public void ReverseOutputXmlAddresspartsInstanceTest()
        {
            // TODO uncomment below to test "IsType" ReverseOutputXmlAddressparts
            //Assert.IsType<ReverseOutputXmlAddressparts>(instance);
        }

        /// <summary>
        /// Test the property 'HouseNumber'
        /// </summary>
        [Fact]
        public void HouseNumberTest()
        {
            // TODO unit test for the property 'HouseNumber'
        }

        /// <summary>
        /// Test the property 'Road'
        /// </summary>
        [Fact]
        public void RoadTest()
        {
            // TODO unit test for the property 'Road'
        }

        /// <summary>
        /// Test the property 'Village'
        /// </summary>
        [Fact]
        public void VillageTest()
        {
            // TODO unit test for the property 'Village'
        }

        /// <summary>
        /// Test the property 'Town'
        /// </summary>
        [Fact]
        public void TownTest()
        {
            // TODO unit test for the property 'Town'
        }

        /// <summary>
        /// Test the property 'City'
        /// </summary>
        [Fact]
        public void CityTest()
        {
            // TODO unit test for the property 'City'
        }

        /// <summary>
        /// Test the property 'County'
        /// </summary>
        [Fact]
        public void CountyTest()
        {
            // TODO unit test for the property 'County'
        }

        /// <summary>
        /// Test the property 'Postcode'
        /// </summary>
        [Fact]
        public void PostcodeTest()
        {
            // TODO unit test for the property 'Postcode'
        }

        /// <summary>
        /// Test the property 'Country'
        /// </summary>
        [Fact]
        public void CountryTest()
        {
            // TODO unit test for the property 'Country'
        }

        /// <summary>
        /// Test the property 'CountryCode'
        /// </summary>
        [Fact]
        public void CountryCodeTest()
        {
            // TODO unit test for the property 'CountryCode'
        }
    }
}
