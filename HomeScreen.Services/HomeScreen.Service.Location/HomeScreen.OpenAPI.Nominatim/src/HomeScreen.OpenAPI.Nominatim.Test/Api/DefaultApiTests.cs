/*
 * Nominatim Open API Spec
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: blake.rogan@outlook.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using Xunit;

using HomeScreen.OpenAPI.Nominatim.Client;
using HomeScreen.OpenAPI.Nominatim.Api;
// uncomment below to import models
//using HomeScreen.OpenAPI.Nominatim.Model;

namespace HomeScreen.OpenAPI.Nominatim.Test.Api
{
    /// <summary>
    ///  Class for testing DefaultApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    public class DefaultApiTests : IDisposable
    {
        private DefaultApi instance;

        public DefaultApiTests()
        {
            instance = new DefaultApi();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of DefaultApi
        /// </summary>
        [Fact]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsType' DefaultApi
            //Assert.IsType<DefaultApi>(instance);
        }

        /// <summary>
        /// Test ReverseGet
        /// </summary>
        [Fact]
        public void ReverseGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //double lat = null;
            //double lon = null;
            //OutputFormat? format = null;
            //string? jsonCallback = null;
            //NumberBoolean? addressdetails = null;
            //NumberBoolean? extratags = null;
            //NumberBoolean? namedetails = null;
            //NumberBoolean? entrances = null;
            //string? acceptLanguage = null;
            //int? zoom = null;
            //Layer? layer = null;
            //decimal? polygonGeojson = null;
            //decimal? polygonKml = null;
            //decimal? polygonSvg = null;
            //decimal? polygonText = null;
            //float? polygonThreshold = null;
            //string? email = null;
            //decimal? debug = null;
            //var response = instance.ReverseGet(lat, lon, format, jsonCallback, addressdetails, extratags, namedetails, entrances, acceptLanguage, zoom, layer, polygonGeojson, polygonKml, polygonSvg, polygonText, polygonThreshold, email, debug);
            //Assert.IsType<ReverseOutputJson>(response);
        }
    }
}
